openapi: '3.0.2'
info:
  title: H8Connect API
  version: '1.0'
components:
  securitySchemes:
    authentication:
      type: http
      scheme: bearer
  schemas:
    responseMetaDetail:
      type: object
      properties:
        total:
          type: number
          example: 100
        perPage:
          type: number
          example: 10
        currentPage:
          type: number
          example: 1
        previoustPage:
          type: number
          example: null
        nextPage:
          type: number
          example: 2
        lastPage:
          type: number
          example: 10
    responseCreate:
      type: object
      properties:
        status:
          type: string 
          example: Success
        code: 
          type: integer
          example: 201
        message:
          type: string
          example: Successfully create data
        data: 
          type: object
          additionalProperties: false
    responseUpdate:
      type: object
      properties:
        status:
          type: string 
          example: Success
        code: 
          type: integer
          example: 200
        message:
          type: string
          example: Successfully update data
        data: 
          type: object
          additionalProperties: false
    responseDelete:
      type: object
      properties:
        status:
          type: string 
          example: Success
        code: 
          type: integer
          example: 200
        message:
          type: string
          example: Successfully delete data
        data: 
          type: object
          additionalProperties: false
    detailDataCreateServiceType:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Lorem Ipsum
        createdAt:
          type: string
          example: 2024-06-06T00:03:41.949Z
        updatedAt:
          type: string
          example: 2024-06-06T00:03:41.949Z
        deletedAt:
          type: string
          example: null
    detailDataDeleteServiceType:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Lorem Ipsum
        createdAt:
          type: string
          example: 2024-06-06T00:03:41.949Z
        updatedAt:
          type: string
          example: 2024-06-06T00:03:41.949Z
        deletedAt:
          type: string
          example: 2024-06-06T00:03:41.949Z
    detailDataCreateService:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Lorem ipsum
        description:
          type: string
          example: Lorem ipsum
        rating:
          type: number
          example: 4.5
        address:
          type: string
          example: Jl. Lorem ipsum
        phoneNumber:
          type: string
          example: (0271) 12345
        serviceTypeId:
          type: integer
          example: 2
        createdAt:
          type: string
          format: date-time
          example: 2024-06-04T17:47:22.689Z
        updatedAt:
          type: string
          format: date-time
          example: 2024-06-04T17:47:22.689Z
        deletedAt:
          type: string
          format: date-time
          example: null
    detailDataDeleteService:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Lorem ipsum
        description:
          type: string
          example: Lorem ipsum
        rating:
          type: number
          example: 4.5
        address:
          type: string
          example: Jl. Lorem ipsum
        phoneNumber:
          type: string
          example: (0271) 12345
        serviceTypeId:
          type: integer
          example: 2
        createdAt:
          type: string
          format: date-time
          example: 2024-06-04T17:47:22.689Z
        updatedAt:
          type: string
          format: date-time
          example: 2024-06-04T17:47:22.689Z
        deletedAt:
          type: string
          format: date-time
          example: 2024-06-04T17:47:22.689Z
    detailDataCreateReview:
      type: object
      properties:
        id:
          type: integer
          example: 1
        userId:
          type: integer
          example: 1
        serviceId:
          type: integer
          example: 2
        rating: 
          type: number
          example: 4.5
        description:
          type: string
          example: Lorem Ipsum
        createdAt:
          type: string
          format: date-time
          example: 2024-06-06T08:31:18.783Z
        updatedAt:
          type: string
          format: date-time
          example: 2024-06-06T08:31:18.783Z
        deletedAt:
          type: string
          format: date-time
          example: null
    detailDataDeleteReview:
      type: object
      properties:
        id:
          type: integer
          example: 1
        userId:
          type: integer
          example: 1
        serviceId:
          type: integer
          example: 2
        rating: 
          type: number
          example: 4.5
        description:
          type: string
          example: Lorem Ipsum
        createdAt:
          type: string
          format: date-time
          example: 2024-06-06T08:31:18.783Z
        updatedAt:
          type: string
          format: date-time
          example: 2024-06-06T08:31:18.783Z
        deletedAt:
          type: string
          format: date-time
          example: 2024-06-06T08:31:18.783Z
    responseGetListService:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name: 
          type: string 
          example: service 1
        serviceTypeId:
          type: integer
          example: 2
        serviceType:
          $ref: "#/components/schemas/detailDataServiceType"
        description:
          type: string
          example: lorem ipsum
        rating:
          type: number
          example: 4.5
        address:
          type: string 
          example: Jl. something
        phoneNumber:
          type: string
          example: 0271812312
        pivotImgId:
          type: number
          example: 1
        imageUrl:
          type: string
          example: https://your-service-image.jpg
        createdAt:
          type: string
          format: date-time
          example: 
        updatedAt:
          type: string
          format: date-time
          example: 
        deletedAt:
          type: string 
          format: date-time
          example:
    detailDataServiceType:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Lorem
    responseGetServiceDetail:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name: 
          type: string 
          example: service 1
        serviceTypeId: 
          type: integer
          example: 1
        serviceType:
          $ref: "#/components/schemas/detailDataServiceType"
        description:
          type: string
          example: lorem ipsum
        rating:
          type: number
          example: 4.5
        address:
          type: string 
          example: Jl. something
        phoneNumber:
          type: string
          example: 0271812312
        images:
          type: array
          items:
            $ref: "#/components/schemas/detailDataImages"
        createdAt:
          type: string
          format: date-time
          example: 
        updatedAt:
          type: string
          format: date-time
          example: 
        deletedAt:
          type: string 
          format: date-time
          example:
        reviews: 
          type: array
          items: 
            $ref: "#/components/schemas/detailDataReviewWithDetailUser"
    detailDataImages:
      type: object
      properties:
        id:
          type: number
          example: 1
        imageUrl:
          type: string
          example: https://your-service-image.jpg
        isMainImg:
          type: boolean
          example: true
    responseGetRelatedServiceDetail:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Service 1
        description:
          type: string
          example: Lorem Ipsum
        rating:
          type: number
          example: 4.5
        address:
          type: string
          example: Jl. Lorem Ipsum
        phoneNumber:
          type: string
          example: (0271) 123456
        serviceTypeId:
          type: integer
          example: 2
        pivotImgId:
          type: integer
          example: 3
        imageUrl:
          type: string
          example: https://your-service-image.jpg
        createdAt:
          type: string
          format: date-time
          example: 2024-06-06T06:33:42.920Z
        updatedAt:
          type: string
          format: date-time
          example: 2024-06-06T06:33:42.920Z
        deletedAt:
          type: string
          format: date-time
          example: null
    detailDataReviewWithDetailUser:
      type: object
      properties:
        id:
          type: integer
          example: 1
        userId:
          type: integer
          example: 1
        user:
          $ref: "#/components/schemas/detailDataUser"
        serviceId: 
          type: integer
          example: 1
        rating: 
          type: number
          example: 4.5
        description:
          type: string
          example: Lorem ipsum
        createdAt: 
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt: 
          type: string 
          format: date-time
    detailDataUser:
      type: object
      properties:
        id: 
          type: integer
          example: 1
        username:
          type: string 
          example: Lorem
        email:
          type: string 
          format: email
          example: user@mail.com
        imageUrl:
          type: string
          example: https://your-service-image.jpg
    detailDataGetSingleUser:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: your-name
        email:
          type: string
          example: your-nam@mail.com
        role: 
          type: string
          example: user
        phoneNumber:
          type: string
          example: 081234567890
        pivotImgId:
          type: integer
          example: 2
        imageUrl:
          type: string
          example: https://your-service-image.jpg
        createdAt:
          type: string
          format: date-time
          example: 2024-06-06T15:16:37.284Z
        updatedAt:
          type: string
          format: date-time
          example: 2024-06-06T15:16:37.284Z
        deletedAt:
          type: string
          format: date-time
          example: null
    detailDataDeleteSingleUser:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: your-name
        email:
          type: string
          example: your-nam@mail.com
        role: 
          type: string
          example: user
        phoneNumber:
          type: string
          example: 081234567890
        pivotImgId:
          type: integer
          example: 2
        imageUrl:
          type: string
          example: https://your-service-image.jpg
        createdAt:
          type: string
          format: date-time
          example: 2024-06-06T15:16:37.284Z
        updatedAt:
          type: string
          format: date-time
          example: 2024-06-06T15:16:37.284Z
        deletedAt:
          type: string
          format: date-time
          example: 2024-06-06T15:16:37.284Z
    responseGetListReviewByUserId:
      type: object
      properties:
        status: 
          type: string 
          example: Success
        code: 
          type: integer
          example: 200
        message:
          type: string
          example: Successfully get review by id
        data:
          type: object
          properties:
            meta:
              $ref: "#/components/schemas/responseMetaDetail"
            data: 
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                username: 
                  type: string 
                  example: Lorem
                email: 
                  type: string 
                  format: email
                  example: user@mail.com
                reviews:
                  type: array
                  items: 
                    $ref: "#/components/schemas/detailDataReviewWithDetailService"
    detailDataReviewWithDetailService:
      type: object
      properties:
        id:
          type: integer
          example: 1
        userId:
          type: integer
          example: 1
        services: 
          $ref: "#/components/schemas/detailDataService"
        rating: 
          type: number
          example: 4.5
        description:
          type: string
          example: Lorem ipsum
        createdAt: 
          type: string
          format: date-time
          example: 2024-06-06T07:27:32.849+00:00
        updatedAt:
          type: string
          format: date-time
          example: 2024-06-06T07:27:32.849+00:00
        deletedAt: 
          type: string 
          format: date-time
          example: null
    detailDataService:
      type: object
      properties:
        id: 
          type: integer
          example: id
        name: 
          type: string 
          example: service 1
        rating:
          type: number
          example: 4.5
        description:
          type: string
          example: Lorem Ipsum
        imageUrl:
          type: string
          example: https://your-service-image.jpg
    requestBodyCreateService:
      type: object
      properties:
        name: 
          type: string 
          example: service 1
        servicetTypeId:
          type: integer
          example: 2
        description:
          type: string
          example: lorem ipsum
        rating:
          type: number
          example: 4.5
        address:
          type: string 
          example: Jl. something
        phoneNumber:
          type: string
          example: 0271812312
    requestBodyCreateReview:
      type: object
      properties:
        userId:
          type: integer
          example: 1
        serviceId:
          type: integer
          example: 1
        rating: 
          type: number
          example: 4.5
        description:
          type: string
          example: Lorem ipsum
    responseSuccessLogin:
      type: object
      properties:
        status: 
          type: string 
          example: Success
        code: 
          type: integer
          example: 200
        message:
          type: string
          example: Login success
        data:
          type: object
          properties:
            id:
              type: integer
              example: 1
            username:
              type: string
              example: user1
            email: 
              type: string 
              example: user1@mail.com
            token:
              type: string 
              format: hash
              example: 
            role: 
              type: string 
              example: user
    responseInternalServerError:
      type: object
      properties:
        status:
          type: string
          example: Error
        code: 
          type: integer
          example: 500
        message:
          type: string 
          example: Internal server error
        data:
          type: object
          additionalProperties: false
    responseNotFoundError:
      type: object
      properties:
        status:
          type: string
          example: Error
        code: 
          type: integer
          example: 404
        message:
          type: string 
          example: Not found
        data:
          type: object
          additionalProperties: false
    responseBadRequestError:
      type: object
      properties:
        status:
          type: string
          example: Error
        code: 
          type: integer
          example: 400
        message:
          type: string 
          example: Bad request
        data:
          type: object
          additionalProperties: false
    responseUnauthorizedError:
      type: object
      properties:
        status:
          type: string
          example: Error
        code: 
          type: integer
          example: 401
        message:
          type: string 
          example: Unauthorized
        data:
          type: object
          additionalProperties: false
    responseForbiddenError:
      type: object
      properties:
        status:
          type: string
          example: Error
        code: 
          type: integer
          example: 403
        message:
          type: string 
          example: Forbidden
        data:
          type: object
          additionalProperties: false

paths:
  /services:
    get:
      description: Get list services
      tags:
        - Service
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: integer
            example: 1
        - name: show
          required: false
          in: query
          schema:
            type: integer
            example: 10
        - name: serviceTypeId
          required: false
          in: query
          schema:
            type: integer
            example: 1
        - name: sortBy
          required: false
          in: query
          schema: 
            type: string
            example: rating
        - name: sortingMethod
          in: query
          required: false
          schema: 
            type: string
            example: desc
        - name: keyword
          in: query
          required: false
          schema: 
            type: string
            example: ''      
      responses:
        '200':
          description: Successfully get data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code: 
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ''
                  data:
                    type: object
                    properties:
                      meta:
                        $ref: "#/components/schemas/responseMetaDetail"
                      data: 
                        type: array
                        items:
                          $ref: "#/components/schemas/responseGetListService"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
    post:
      description: Create service
      tags:
        - Service
      security:
        - authentication: []
      requestBody:
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/requestBodyCreateService"
      responses:
        '201':
          description: Successfully create service
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string 
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataCreateService"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
  /services/:id:
    put:
      description: Update service by Id
      tags:
        - Service
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/requestBodyCreateService"
      responses:
        '200':
          description: Successfully update service
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string 
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataCreateService"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
    delete:
      description: Delete service by Id
      tags:
        - Service
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/requestBodyCreateService"
      responses:
        '200':
          description: Successfully delete service
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string 
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataDeleteService"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
    get:
      description: Get service by Id
      tags:
        - Service
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: page
          required: false
          in: query
          schema:
            type: integer
            example: 1
        - name: show
          required: false
          in: query
          schema:
            type: integer
            example: 10
        - name: sortBy
          required: false
          in: query
          schema: 
            type: string
            example: rating
        - name: sortingMethod
          in: query
          required: false
          schema: 
            type: string
            example: desc
        - name: keyword
          in: query
          required: false
          schema: 
            type: string
            example: ''
      responses:
        '200':
          description: Successfully get service by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code: 
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ''
                  data:
                    type: object
                    properties:
                      meta:
                        $ref: "#/components/schemas/responseMetaDetail"
                      data: 
                        $ref: "#/components/schemas/responseGetServiceDetail"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
  /services/:id/related:
    get:
      description: Get related service
      tags:
        - Service
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: Successfully get related services
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code: 
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ''
                  data: 
                    type: array
                    items:
                      $ref: "#/components/schemas/responseGetRelatedServiceDetail"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
  /reviews:
    post:
      description: Create a review
      tags:
        - Review
      security:
        - authentication: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/requestBodyCreateReview"
      responses:
        '201':
          description: Successfully create a review
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: Successfully create data
                  data:
                    $ref: "#/components/schemas/detailDataCreateReview"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
  /reviews/:id:
    get:
      description: Get review by id
      tags:
        - Review
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string 
                    example: OK
                  data: 
                    $ref: "#/components/schemas/detailDataCreateReview"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
    put:
      description: Update a review by id
      tags:
        - Review
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/requestBodyCreateReview"
      responses:
        '200':
          description: Successfully update a review
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: Success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataCreateReview"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
    delete:
      description: Delete a review by id
      tags:
        - Review
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully delete a review
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: Success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataDeleteReview"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"      
  /users/:id/reviews:
    get:
      description: Get list user's review history
      tags:
        - User
      security:
        - authentication: []
      parameters:
        - name: id
          in: path 
          required: true
          schema:
            type: integer
            example: 1
        - name: page
          required: false
          in: query
          schema:
            type: integer
            example: 1
        - name: show
          required: false
          in: query
          schema:
            type: integer
            example: 10
        - name: sortBy
          required: false
          in: query
          schema: 
            type: string
            example: rating
        - name: sortingMethod
          in: query
          required: false
          schema: 
            type: string
            example: desc
        - name: keyword
          in: query
          required: false
          schema: 
            type: string
            example: ''
      responses:
        '200':
          description: Successfully get list review by userId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseGetListReviewByUserId"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
  /users/:id:
    get:
      description: Get User By Id
      tags:
        - User
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: Successfully get user by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataGetSingleUser"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
    put:
      description: Delete User By Id
      tags:
        - User
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username: 
                  type: string
                  example: your-name
                email:
                  type: string
                  example: your-name@mail.com
                phoneNumber:
                  type: string
                  example: 081234567890
      responses:
        200:
          description: Successfully update user by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataGetSingleUser"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
    delete:
      description: Delete User By Id
      tags:
        - User
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: Successfully delete user by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataGetSingleUser"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
  /login:
    post:
      description: user login
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: yourUsername
                email:
                  type: string
                  example: user1
                password:
                  type: string
                  example: YourPassword1#
      responses:
        '200':
          description: Login success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseSuccessLogin"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
  /register:
    post:
      description: user register
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: user1
                email:
                  type: string
                  example: user1@mail.com
                password:
                  type: string
                  example: YourPassword1#
      responses:
        '201':
          description: Register success
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/responseCreate"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
  /service-types:
    post:
      description: Create service types
      tags:
        - Service Type
      security:
        - authentication: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Lorem Ipsum
      responses:
        201:
          description: Successfully create data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataCreateServiceType"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
  /service-types/:id:
    get:
      description: Get service by Id
      tags:
        - Service Type
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: Successfully get data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataCreateServiceType"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
    put:
      description: Update service by Id
      tags:
        - Service Type
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Lorem Ipsum
      responses:
        200:
          description: Successfully update data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataCreateServiceType"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
    delete:
      description: Delete service by Id
      tags:
        - Service Type
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: Successfully delete data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/detailDataDeleteServiceType"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBadRequestError"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseUnauthorizedError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNotFoundError"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"
  /service-types/select:
    get:
      description: Get list service types
      tags:
        - Service Type
      responses:
        200:
          description: Successfully fetch select list data 
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  code:
                    type: integer
                    example: 200
                  message: 
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string 
                          example: Lorem ipsum
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseInternalServerError"